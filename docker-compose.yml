version: '3.8'

services:
  # Core Infrastructure
  api-gateway:
    build:
      context: ./agentflow/infrastructure/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  service-registry:
    build:
      context: ./agentflow/infrastructure/service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
      - EUREKA_SERVER_ENABLE-SELF-PRESERVATION=false
      - EUREKA_SERVER_WAIT-TIME-IN-MS-WHEN-SYNC-EMPTY=0
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  config-server:
    build:
      context: ./agentflow/infrastructure/config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:/config-repo
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
    volumes:
      - ./config-repo:/config-repo
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Databases
  mariadb:
    image: mariadb:11.7.2
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=agentflow
      - MYSQL_USER=agentflow
      - MYSQL_PASSWORD=agentflow
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "/usr/bin/kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=agentflow-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - agentflow-network

  # Core Services
  identity-service:
    build:
      context: ./agentflow/services/identity-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/agentflow
      - SPRING_DATASOURCE_USERNAME=agentflow
      - SPRING_DATASOURCE_PASSWORD=agentflow
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8081
    depends_on:
      mariadb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prompt-service:
    build:
      context: ./agentflow/services/prompt-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/agentflow
      - SPRING_DATASOURCE_USERNAME=agentflow
      - SPRING_DATASOURCE_PASSWORD=agentflow
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8082
    depends_on:
      mariadb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  flow-service:
    build:
      context: ./agentflow/services/flow-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/agentflow
      - SPRING_DATASOURCE_USERNAME=agentflow
      - SPRING_DATASOURCE_PASSWORD=agentflow
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8083
    depends_on:
      mariadb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  agent-service:
    build:
      context: ./agentflow/services/agent-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/agentflow
      - SPRING_DATASOURCE_USERNAME=agentflow
      - SPRING_DATASOURCE_PASSWORD=agentflow
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8084
    depends_on:
      mariadb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  integration-service:
    build:
      context: ./agentflow/services/intergration-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/agentflow
      - SPRING_DATASOURCE_USERNAME=agentflow
      - SPRING_DATASOURCE_PASSWORD=agentflow
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8085
    depends_on:
      mariadb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - agentflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  agentflow-network:
    driver: bridge

volumes:
  mariadb-data:
  elasticsearch-data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data: